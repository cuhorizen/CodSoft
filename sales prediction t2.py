#!/usr/bin/env python
# coding: utf-8

# Muhammad Usman Malik 
# TASK2 Sales prediction using Python

# In[25]:


import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split


# In[26]:


sales_data = pd.read_csv('advertising.csv')


# In[27]:


sales_data.head()


# In[28]:


sales_data.tail()


# In[29]:


sales_data.describe()


# In[30]:


sales_data.shape


# In[31]:


#for making observation and visulization of it i am usin pairplot
sns.pairplot(sales_data,x_vars=['TV','Radio','Newspaper'],y_vars='Sales',kind='scatter')
plt.show()


# In[32]:


sales_data['TV'].plot.hist(bins=15)


# In[33]:


sales_data['Radio'].plot.hist(bins=15, color="purple", xlabel="Radio")


# In[34]:


sales_data['Newspaper'].plot.hist(bins=15, color="yellow", xlabel="Newspaper")
# graph is showing that most low advertising cost in news paper


# In[35]:


sns.heatmap(sales_data.corr(),annot=True)
plt.show()
# heatmap showing us most sales  generated by tv


# #  Model Training

# In[55]:


x_train,x_test,y_train,y_test=train_test_split(sales_data[['TV']],sales_data[['Sales']],test_size=0.2,random_state=0)


# In[56]:


print(x_train)


# In[57]:


print(y_train)


# In[58]:


x_test.head()


# In[59]:


x_test.tail()


# In[60]:


y_test.head()


# In[61]:


y_test.tail()


# In[62]:


from sklearn.linear_model import LinearRegression
x_train_reshaped = x_train.values.reshape(-1, 1)
model= LinearRegression()
model.fit(x_train_reshaped,y_train)


# # model testing

# In[63]:


x_test_reshaped = x_test.values.reshape(-1, 1)
test=model.predict(x_test_reshaped)
print(test)


# In[65]:


model.coef_


# In[66]:


model.intercept_


# In[68]:


0.0544343*69.2+7.16227597


# In[64]:


plt.scatter(x_test,y_test)
plt.plot(x_test,7.14382225+0.05473199*x_test,'r')
plt.show()

